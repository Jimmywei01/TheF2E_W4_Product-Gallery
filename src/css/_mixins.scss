// Mixin itself 清除 float 高度 還原元件高度
@mixin clearfix() {
    &::after {
       content: "";
       display: table;
       clear: both;
    }
}
// 圖片
@mixin bg($img){
    background: url("./src/images/#{$img}");  
    width: image-width("./src/images/#{$img}");  
    height: image-height("./src/images/#{$img}"); 
}   

// col 分割欄位
// 分割 3 欄位
// .col-4 { @include col(left, 3, 0, 10px);}
@mixin col($float, $number, $tb, $lr) {
  float: $float;
  padding: $tb $lr;
  width: 100%/$number;
  overflow: hidden;
}


//三角形產生器 預設是等腰三角形，如要做正三角形，請將type預設變數改為0.8666666 
//右上角的，就打：@include triangle(30px, red, right-top) 左下角的就打：@include triangle(30px, red, left-bottom)
@mixin triangle($size, $color, $align,$type:1){
  height: 0;
  width: 0;
  @if ($align == top){
    border-bottom: ($size*$type) solid $color;
    border-left: ($size/2) solid transparent;
    border-right: ($size/2) solid transparent;
  } 
  @else if ($align == right){
      border-left: ($size*$type) solid $color;
    border-top: ($size/2) solid transparent;
    border-bottom: ($size/2) solid transparent;
  }
  @else if ($align == bottom){
    border-top: ($size*$type) solid $color;
    border-left: ($size/2) solid transparent;
    border-right: ($size/2) solid transparent;
  }
  @else if ($align == left){
    border-right: ($size*$type) solid $color;
    border-top: ($size/2) solid transparent;
    border-bottom: ($size/2) solid transparent;
  }
  @else if ($align == right-top){
    border-right: $size solid $color;
    border-bottom: $size solid transparent;
  }
  @else if ($align == left-top){
    border-left: $size solid $color;
    border-bottom: $size solid transparent;   
  }
    
  @else if ($align == right-bottom){
    border-right: $size solid $color;
    border-top: $size solid transparent;  
  }
  @else if ($align == left-bottom){
    border-left: $size solid $color;
    border-top: $size solid transparent;  
  }
}
  
// 轉換的結果（rem或vw）、可以識別auto、0、rem、em、vw等不需要轉的單位
// scss -> div{margin:rem(10px 10rem 0 auto);}
// css -> div{margin: 0.625rem 10rem 0 auto;}
// root 預設基礎文字大小
@function rem($values) {
  $root: 16px;
  $unit: rem;
  $list: ();
  @each $v in $values {
    $res: 0;
    @if ($v==0 or $v==auto or unit($v)==rem or unit($v)==em or unit($v)==vw or unit($v)==vh) {
      $res: $v;
    }
    @else {
      $res: ($v + 0px) / $root + $unit;
    }
    $list: append($list, $res);
  }
  @return $list;
}